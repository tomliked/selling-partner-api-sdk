name: Sync PHP SDK to selling-partner-api-php-release

on:
  push:
    paths:
      - "php/sdk/**"
    branches:
      - main
  workflow_dispatch:
    inputs:
      newVersionNumber:
        type: string
        description: New version number
        required: true

env:
  SDK_VERSION: ${{ github.event.inputs.newVersionNumber }}

concurrency:
  group: sync-php-sdk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Repository (selling-partner-api-sdk)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          path: selling-partner-api-sdk

      - name: Clone Target Repository (selling-partner-api-php-release)
        run: |
          mkdir -p ~/workspace
          cd ~/workspace
          echo "Cloning selling-partner-api-php-release..."
          git clone --depth=1 https://x-access-token:${{ secrets.TOMLIKED_PAT }}@github.com/amzn/selling-partner-api-php-release.git target-repo || { echo "Git clone failed"; exit 1; }

      - name: Debug Check php/sdk/ directory
        run: |
          echo "Current working directory: $(pwd)"
          find selling-partner-api-sdk -type d | grep "php/sdk" || echo "php/sdk/ not found!"
          if [ -d "selling-partner-api-sdk/php/sdk" ]; then
            ls -la selling-partner-api-sdk/php/
            ls -la selling-partner-api-sdk/php/sdk/
          else
            echo "ERROR: selling-partner-api-sdk/php/sdk/ does not exist!"
            exit 1
          fi

      - name: Ensure target-repo is Clean Before Sync
        run: |
          echo "Cleaning target-repo before sync..."
          rm -rf ~/workspace/target-repo/*
          ls -la ~/workspace/target-repo/

      - name: Fully Sync php/sdk/ to Target Repo
        run: |
          echo "Syncing ~/selling-partner-api-sdk/php/sdk/ to ~/workspace/target-repo/..."
          rsync -av --delete --force ~/selling-partner-api-sdk/php/sdk/ ~/workspace/target-repo/
          echo "Sync complete. Checking target-repo/"
          ls -la ~/workspace/target-repo/

      - name: Commit and Push Changes
        run: |
          cd ~/workspace/target-repo
          git config user.email "tomliked@amazon.co.jp"
          git config user.name "tomliked"
          BRANCH_NAME="sync-sdk-${{ env.SDK_VERSION }}-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
          git add -A
          git commit -m "Sync PHP SDK - Version ${{ env.SDK_VERSION }}" || echo "No changes to commit"
          git push origin "$BRANCH_NAME"

      - name: Create a Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.TOMLIKED_PAT }}
          branch: ${{ env.BRANCH_NAME }}
          base: main
          title: "Sync PHP SDK - Version ${{ github.event.inputs.newVersionNumber }}"
          body: |
            This PR syncs the latest changes from `selling-partner-api-sdk/php/sdk/` to `selling-partner-api-php-release/`.
            - Version: ${{ github.event.inputs.newVersionNumber }}
          labels: automated, sdk-sync
